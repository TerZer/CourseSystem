package lt.terzer.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import lt.terzer.MainApplication;
import lt.terzer.files.File;
import lt.terzer.files.Folder;

import javax.swing.*;
import java.awt.*;
import java.text.SimpleDateFormat;

public class FileInformationWindow extends JFrame {

    private final SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

    private JPanel panel1;
    private JLabel fileNameLabel;
    private JLabel creationDateLabel;
    private JLabel parentFolderLabel;
    private JLabel availableFilesLabel;
    private JLabel availableFilesTitleLabel;

    FileInformationWindow(File file) {
        super("File information");
        setPreferredSize(new Dimension(300, 150));
        setContentPane(panel1);
        pack();
        setLocationRelativeTo(null);
        fileNameLabel.setText(file.getName());
        creationDateLabel.setText(format.format(file.getDate()));
        String parent = getParentFolder(file);
        parentFolderLabel.setText(parent == null ? "" : parent);
        if (file.isFolder()) {
            availableFilesLabel.setVisible(true);
            availableFilesTitleLabel.setVisible(true);
            availableFilesLabel.setText(String.valueOf(getAvailableFilesCount((Folder) file)));
        } else {
            availableFilesLabel.setVisible(false);
            availableFilesTitleLabel.setVisible(false);
        }
        setVisible(true);
    }

    private int getAvailableFilesCount(Folder folder) {
        int cnt = 0;
        for (File file : MainApplication.getFileDatabase().getByIds(folder.getFiles())) {
            if (file.isFolder()) {
                cnt += getAvailableFilesCount((Folder) file);
            } else {
                cnt++;
            }
        }
        return cnt;
    }

    private String getParentFolder(File file) {
        for (File f : MainApplication.getFileDatabase().getAll()) {
            if (f.isFolder()) {
                if (((Folder) f).getFiles().contains(file.getId())) {
                    return f.getName();
                }
            }
        }
        return null;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("File name:");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fileNameLabel = new JLabel();
        fileNameLabel.setText("");
        panel1.add(fileNameLabel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Creation date:");
        panel1.add(label2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Parent folder:");
        panel1.add(label3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        parentFolderLabel = new JLabel();
        parentFolderLabel.setText("");
        panel1.add(parentFolderLabel, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        creationDateLabel = new JLabel();
        creationDateLabel.setText("");
        panel1.add(creationDateLabel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        availableFilesTitleLabel = new JLabel();
        availableFilesTitleLabel.setText("Available files in folder:");
        panel1.add(availableFilesTitleLabel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        availableFilesLabel = new JLabel();
        availableFilesLabel.setText("");
        panel1.add(availableFilesLabel, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
